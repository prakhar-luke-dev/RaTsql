[
  {
    "query": "Which campaign had the maximum impressions on 1 jan 2025?",
    "sql": "SELECT gcd.campaign_id, gcd.campaign_name, SUM(gcp.metrics_impressions) AS total_impressions FROM projectx-pipeline.dataset.google_ads_campaign_performancepostfix gcp JOIN projectx-pipeline.dataset.google_ads_campaign_detailspostfix gcd ON gcp.campaign_id = gcd.campaign_id WHERE gcp.customer_id = 8870377244 AND gcp.segments_date = '2025-01-01' GROUP BY gcd.campaign_id, gcd.campaign_name ORDER BY total_impressions DESC LIMIT 1",
    "tables": [
      "campaign_details",
      "campaign_performance"
    ],
    "columns": [
      "metrics_impressions",
      "campaign_id",
      "customer_id",
      "segments_date",
      "campaign_name",
      "total_impressions"
    ]
  },
  {
    "query": "What is the total number of campaigns with a conversion rate above 4% in may 2025.",
    "sql": "SELECT COUNT(*) AS total_campaigns_above_4pct_CR\nFROM (\n SELECT \n cp.campaign_id,\n SAFE_MULTIPLY(\n SAFE_DIVIDE(SUM(cp.metrics_conversions), SUM(cp.metrics_interactions)),\n 100\n ) AS conversion_rate\n FROM `projectx-pipeline.dataset.google_ads_campaign_performancepostfix` cp\n WHERE cp.customer_id = 3424742100\n AND cp.segments_date BETWEEN '2025-05-01' AND '2025-05-31'\n GROUP BY cp.campaign_id\n HAVING conversion_rate > 4\n) AS campaign_cr;",
    "tables": [
      "campaign_performance"
    ],
    "columns": [
      "metrics_interactions",
      "campaign_id",
      "metrics_conversions",
      "customer_id",
      "segments_date",
      "conversion_rate"
    ]
  },
  {
    "query": "How many total conversions did the account have on 23 feb 2025?",
    "sql": "SELECT SUM(cp.metrics_conversions) AS total_conversions\nFROM projectx-pipeline.dataset.google_ads_campaign_performancepostfix cp\nJOIN projectx-pipeline.dataset.google_ads_campaign_detailspostfix c ON cp.campaign_id = c.campaign_id\nWHERE c.customer_id = 3424742100\nAND cp.segments_date = '2025-02-23'",
    "tables": [
      "campaign_details",
      "campaign_performance"
    ],
    "columns": [
      "segments_date",
      "metrics_conversions",
      "campaign_id",
      "customer_id"
    ]
  },
  {
    "query": "what are the best performing hours of the day for this account across all the different campaigns?",
    "sql": "SELECT gcdp.segments_hour, SUM(gcdp.metrics_conversions) AS total_conversions, SAFE_DIVIDE(SUM(gcdp.metrics_cost_micros), 1000000) AS total_cost\nFROM projectx-pipeline.dataset.google_ads_campaign_time_performancepostfix gcdp\nJOIN projectx-pipeline.dataset.google_ads_campaign_detailspostfix gcd ON gcdp.campaign_id = gcd.campaign_id\nWHERE gcd.customer_id = 3424742100\nGROUP BY gcdp.segments_hour\nORDER BY total_conversions DESC, total_cost ASC\nLIMIT 10",
    "tables": [
      "campaign_time_performance",
      "campaign_details"
    ],
    "columns": [
      "total_conversions",
      "total_cost",
      "metrics_conversions",
      "campaign_id",
      "metrics_cost_micros",
      "customer_id",
      "segments_hour"
    ]
  },
  {
    "query": "What was the type, name, cost and budget of the campaign with maximum clicks on 6 Jan 2025?",
    "sql": "SELECT gc.campaign_advertising_channel_type, gc.campaign_name, SAFE_DIVIDE(SUM(gcp.metrics_cost_micros), 1000000) AS cost, SUM(gcp.metrics_clicks) AS clicks, SAFE_DIVIDE(gc.campaign_budget_amount_micros, 1000000) AS budget\nFROM projectx-pipeline.dataset.google_ads_campaign_detailspostfix gc \nJOIN projectx-pipeline.dataset.google_ads_campaign_performancepostfix gcp ON gc.campaign_id = gcp.campaign_id\nWHERE gc.customer_id = 3424742100 \n  AND gcp.segments_date = '2025-01-06' \nGROUP BY gc.campaign_id, gc.campaign_name, gc.campaign_advertising_channel_type, gc.campaign_budget_amount_micros\nORDER BY clicks DESC \nLIMIT 1",
    "tables": [
      "campaign_performance",
      "campaign_details"
    ],
    "columns": [
      "clicks",
      "campaign_advertising_channel_type",
      "campaign_id",
      "metrics_cost_micros",
      "customer_id",
      "segments_date",
      "campaign_name",
      "campaign_budget_amount_micros",
      "metrics_clicks"
    ]
  },
  {
    "query": "Over the past 14 days - Which campaign had the lowest conversion rate?",
    "sql": "SELECT gcd.campaign_name, SAFE_DIVIDE(SUM(gcp.metrics_conversions), SUM(gcp.metrics_interactions)) * 100 AS conversion_rate\nFROM projectx-pipeline.dataset.google_ads_campaign_performancepostfix gcp\nJOIN projectx-pipeline.dataset.google_ads_campaign_detailspostfix gcd \nON gcp.campaign_id = gcd.campaign_id\nWHERE gcd.customer_id = 3424742100\nAND gcp.segments_date BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 14 DAY) AND DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)\nGROUP BY gcd.campaign_id, gcd.campaign_name\nHAVING conversion_rate > 0\nORDER BY conversion_rate ASC\nLIMIT 1",
    "tables": [
      "campaign_details",
      "campaign_performance"
    ],
    "columns": [
      "metrics_interactions",
      "campaign_id",
      "metrics_conversions",
      "customer_id",
      "segments_date",
      "campaign_name",
      "conversion_rate"
    ]
  },
  {
    "query": "Which Campaign has the maximum views on 15-jan-2025?",
    "sql": "SELECT gcd.campaign_name, SUM(gcp.metrics_video_views) AS total_views \nFROM projectx-pipeline.dataset.google_ads_campaign_performancepostfix gcp \nJOIN projectx-pipeline.dataset.google_ads_campaign_detailspostfix gcd ON gcp.campaign_id = gcd.campaign_id \nWHERE gcd.customer_id = 3424742100 \nAND gcp.segments_date = '2025-01-15' \nGROUP BY gcd.campaign_id, gcd.campaign_name \nORDER BY total_views DESC \nLIMIT 1",
    "tables": [
      "campaign_details",
      "campaign_performance"
    ],
    "columns": [
      "metrics_video_views",
      "campaign_id",
      "total_views",
      "customer_id",
      "segments_date",
      "campaign_name"
    ]
  },
  {
    "query": "How many conversions have been generated from google display network on 6 Feb 2025 ?",
    "sql": "SELECT SUM(gcp.metrics_conversions) AS total_conversions \nFROM `projectx-pipeline.dataset.google_ads_campaign_performancepostfix` gcp \nJOIN `projectx-pipeline.dataset.google_ads_campaign_detailspostfix` gcd \nON gcp.campaign_id = gcd.campaign_id \nWHERE gcp.customer_id = 3424742100 \nAND gcp.segments_date = '2025-02-06' \nAND gcd.campaign_advertising_channel_type = 'DISPLAY'",
    "tables": [
      "campaign_details",
      "campaign_performance"
    ],
    "columns": [
      "campaign_advertising_channel_type",
      "metrics_conversions",
      "campaign_id",
      "customer_id",
      "segments_date"
    ]
  },
  {
    "query": "List top 5 ad groups which has highest clicks",
    "sql": "SELECT gag.ad_group_name, SUM(gap.metrics_clicks) AS total_clicks\nFROM projectx-pipeline.dataset.google_ads_ad_group_ads_performancepostfix gap\nJOIN projectx-pipeline.dataset.google_ads_ad_group_detailspostfix gag ON gap.ad_group_id = gag.ad_group_id\nWHERE gap.customer_id = 3424742100\nGROUP BY gag.ad_group_id, gag.ad_group_name\nORDER BY total_clicks DESC\nLIMIT 5",
    "tables": [
      "ad_group_ads_performance",
      "ad_group_details"
    ],
    "columns": [
      "customer_id",
      "ad_group_name",
      "ad_group_id",
      "total_clicks",
      "metrics_clicks"
    ]
  },
  {
    "query": "Which ad group had the maximum cost per conversion on 2 June 2025 ?",
    "sql": "SELECT gag.ad_group_name, \n       SAFE_DIVIDE(SAFE_DIVIDE(SUM(ga.metrics_cost_micros), 1000000), SUM(ga.metrics_conversions)) AS cost_per_conversion\nFROM projectx-pipeline.dataset.google_ads_ad_group_performancepostfix ga\nJOIN projectx-pipeline.dataset.google_ads_ad_group_detailspostfix gag ON ga.ad_group_id = gag.ad_group_id\nWHERE ga.customer_id = 3424742100\nAND ga.segments_date = '2025-06-02'\nGROUP BY gag.ad_group_name\nORDER BY cost_per_conversion DESC\nLIMIT 1",
    "tables": [
      "ad_group_details",
      "ad_group_performance"
    ],
    "columns": [
      "metrics_conversions",
      "cost_per_conversion",
      "metrics_cost_micros",
      "customer_id",
      "ad_group_name",
      "segments_date",
      "ad_group_id"
    ]
  },
  {
    "query": "Which ad group has the highest conversion rate in may month?",
    "sql": "SELECT gag.ad_group_name, \n       SAFE_DIVIDE(SUM(ga.metrics_conversions), SUM(ga.metrics_interactions)) * 100 AS conversion_rate\nFROM projectx-pipeline.dataset.google_ads_ad_group_performancepostfix ga\nJOIN projectx-pipeline.dataset.google_ads_ad_group_detailspostfix gag ON ga.ad_group_id = gag.ad_group_id\nWHERE ga.customer_id = 3424742100\n  AND EXTRACT(MONTH FROM ga.segments_date) = 5\nGROUP BY gag.ad_group_name\nORDER BY conversion_rate DESC\nLIMIT 1",
    "tables": [
      "ad_group_details",
      "ad_group_performance"
    ],
    "columns": [
      "metrics_interactions",
      "metrics_conversions",
      "customer_id",
      "ad_group_name",
      "segments_date",
      "ad_group_id",
      "conversion_rate"
    ]
  },
  {
    "query": "Which campaign and ad group had maximum female impressions on 29 dec 2024?",
    "sql": "SELECT gcd.campaign_name, gag.ad_group_name, SUM(ggp.metrics_impressions) AS total_impressions\nFROM projectx-pipeline.dataset.google_ads_gender_performancepostfix ggp\nJOIN projectx-pipeline.dataset.google_ads_ad_group_detailspostfix gag ON ggp.ad_group_id = gag.ad_group_id\nJOIN projectx-pipeline.dataset.google_ads_campaign_detailspostfix gcd ON gag.campaign_id = gcd.campaign_id\nWHERE ggp.customer_id = 3424742100\nAND ggp.ad_group_criterion_gender_type = 'FEMALE'\nAND ggp.segments_date = '2024-12-29'\nGROUP BY gcd.campaign_name, gag.ad_group_name\nORDER BY total_impressions DESC\nLIMIT 1",
    "tables": [
      "campaign_details",
      "ad_group_details",
      "gender_performance"
    ],
    "columns": [
      "ad_group_criterion_gender_type",
      "metrics_impressions",
      "campaign_id",
      "customer_id",
      "ad_group_name",
      "segments_date",
      "campaign_name",
      "ad_group_id",
      "total_impressions"
    ]
  },
  {
    "query": "How many ads had over 1000 clicks on 3 april 2025?",
    "sql": "SELECT COUNT(DISTINCT ga.ad_group_ad_ad_id) \nFROM projectx-pipeline.dataset.google_ads_ad_group_ads_performancepostfix ga \nWHERE ga.customer_id = 3424742100 \nAND ga.segments_date = '2025-04-03' \nAND ga.metrics_clicks > 1000",
    "tables": [
      "ad_group_ads_performance"
    ],
    "columns": [
      "segments_date",
      "ad_group_ad_ad_id",
      "metrics_clicks",
      "customer_id"
    ]
  },
  {
    "query": "how many disapproved ads does this account have over the past 90 days?",
    "sql": "SELECT COUNT(DISTINCT ga.ad_group_ad_ad_id) \nFROM projectx-pipeline.dataset.google_ads_ad_group_ads_detailspostfix ga\nWHERE ga.customer_id = 3424742100\nAND ga.ad_group_ad_policy_summary_approval_status = 'DISAPPROVED'\nAND ga.ad_group_ad_ad_id IN (\n  SELECT ad_group_ad_ad_id \n  FROM projectx-pipeline.dataset.google_ads_ad_group_ads_performancepostfix\n  WHERE customer_id = 3424742100\n  AND segments_date >= DATE_SUB(CURRENT_DATE, INTERVAL 90 DAY)\n)",
    "tables": [
      "ad_group_ads_performance",
      "ad_group_ads_details"
    ],
    "columns": [
      "segments_date",
      "ad_group_ad_ad_id",
      "customer_id",
      "ad_group_ad_policy_summary_approval_status"
    ]
  },
  {
    "query": "What is the total clicks of age above 65+ in date between 13 mar to 23 may 25?",
    "sql": "SELECT SUM(gar.metrics_clicks) AS total_clicks \nFROM projectx-pipeline.dataset.google_ads_age_range_performancepostfix gar \nWHERE gar.customer_id = 3424742100 AND gar.segments_date BETWEEN '2025-03-13' AND '2025-05-23' \nAND gar.ad_group_criterion_age_range_type = 'AGE_RANGE_65_UP'",
    "tables": [
      "age_range_performance"
    ],
    "columns": [
      "segments_date",
      "ad_group_criterion_age_range_type",
      "metrics_clicks",
      "customer_id"
    ]
  },
  {
    "query": "what are the age ranges available in database?",
    "sql": "SELECT DISTINCT ad_group_criterion_age_range_type \nFROM projectx-pipeline.dataset.google_ads_age_range_performancepostfix \nWHERE customer_id = 3424742100",
    "tables": [
      "age_range_performance"
    ],
    "columns": [
      "ad_group_criterion_age_range_type",
      "customer_id"
    ]
  },
  {
    "query": "Provide a breakdown in terms of gender eCPA for this campaign - adv-morningkick-branded-search",
    "sql": "SELECT ggp.ad_group_criterion_gender_type AS gender, SAFE_DIVIDE(SAFE_DIVIDE(SUM(ggp.metrics_cost_micros), 1000000), SUM(ggp.metrics_conversions)) AS eCPA\nFROM projectx-pipeline.dataset.google_ads_gender_performancepostfix ggp\nJOIN projectx-pipeline.dataset.google_ads_ad_group_detailspostfix gag ON ggp.ad_group_id = gag.ad_group_id\nJOIN projectx-pipeline.dataset.google_ads_campaign_detailspostfix gcd ON gag.campaign_id = gcd.campaign_id\nWHERE ggp.customer_id = 3424742100\nAND gcd.campaign_name = 'adv-morningkick-branded-search'\nGROUP BY ggp.ad_group_criterion_gender_type\nORDER BY eCPA ASC",
    "tables": [
      "campaign_details",
      "ad_group_details",
      "gender_performance"
    ],
    "columns": [
      "ad_group_criterion_gender_type",
      "metrics_conversions",
      "campaign_id",
      "metrics_cost_micros",
      "customer_id",
      "eCPA",
      "campaign_name",
      "ad_group_id"
    ]
  },
  {
    "query": "What was the most profitable keyword in adv-morningkick-nonbranded-energy campaign?",
    "sql": "SELECT gkp.ad_group_criterion_keyword_text AS keyword, \n  SUM(gkp.metrics_conversions) AS total_conversions, \n  SAFE_DIVIDE(SUM(gkp.metrics_cost_micros), 1000000) AS total_cost, \n  SAFE_DIVIDE(SUM(gkp.metrics_conversions), SUM(gkp.metrics_interactions)) * 100 AS conversion_rate,\n  SAFE_DIVIDE(SAFE_DIVIDE(SUM(gkp.metrics_cost_micros), 1000000), SUM(gkp.metrics_conversions)) AS eCPA\nFROM projectx-pipeline.dataset.google_ads_keyword_performancepostfix gkp\nJOIN projectx-pipeline.dataset.google_ads_ad_group_detailspostfix gag ON gkp.ad_group_id = gag.ad_group_id\nJOIN projectx-pipeline.dataset.google_ads_campaign_detailspostfix gcd ON gag.campaign_id = gcd.campaign_id\nWHERE gkp.customer_id = 3424742100 \n  AND gcd.campaign_name = 'adv-morningkick-nonbranded-energy'\nGROUP BY gkp.ad_group_criterion_keyword_text\nORDER BY total_conversions DESC, total_cost ASC\nLIMIT 1;",
    "tables": [
      "campaign_details",
      "keyword_performance",
      "ad_group_details"
    ],
    "columns": [
      "total_conversions",
      "total_cost",
      "metrics_conversions",
      "ad_group_criterion_keyword_text",
      "campaign_id",
      "metrics_cost_micros",
      "customer_id",
      "campaign_name",
      "ad_group_id",
      "metrics_interactions"
    ]
  },
  {
    "query": "Which keywords have received the most impressions over the past 30 days?",
    "sql": "SELECT gkp.ad_group_criterion_keyword_text AS keyword, gkp.ad_group_criterion_keyword_match_type AS match_type, SUM(gkp.metrics_impressions) AS total_impressions \nFROM projectx-pipeline.dataset.google_ads_keyword_performancepostfix gkp \nWHERE gkp.customer_id = 3424742100 \nAND gkp.segments_date BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY) AND DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY) \nGROUP BY gkp.ad_group_criterion_keyword_text, gkp.ad_group_criterion_keyword_match_type \nORDER BY total_impressions DESC \nLIMIT 10",
    "tables": [
      "keyword_performance"
    ],
    "columns": [
      "metrics_impressions",
      "ad_group_criterion_keyword_match_type",
      "ad_group_criterion_keyword_text",
      "customer_id",
      "segments_date",
      "total_impressions"
    ]
  },
  {
    "query": "Can you list all the search keywords running in order by the ones that have the most conversions and include their cost per conversion?",
    "sql": "SELECT gkp.ad_group_criterion_keyword_text AS keyword, \ngkp.ad_group_criterion_keyword_match_type AS match_type, \nSUM(gkp.metrics_conversions) AS total_conversions, \nSAFE_DIVIDE(SAFE_DIVIDE(SUM(gkp.metrics_cost_micros), 1000000), SUM(gkp.metrics_conversions)) AS cost_per_conversion\nFROM projectx-pipeline.dataset.google_ads_keyword_performancepostfix AS gkp\nJOIN projectx-pipeline.dataset.google_ads_campaign_detailspostfix cd ON gkp.campaign_id = cd.campaign_id\nWHERE gkp.customer_id = 3424742100\n  AND cd.campaign_advertising_channel_type = 'SEARCH'\nGROUP BY gkp.ad_group_criterion_keyword_text, gkp.ad_group_criterion_keyword_match_type\nORDER BY total_conversions DESC",
    "tables": [
      "campaign_details",
      "keyword_performance"
    ],
    "columns": [
      "total_conversions",
      "campaign_advertising_channel_type",
      "metrics_conversions",
      "ad_group_criterion_keyword_match_type",
      "ad_group_criterion_keyword_text",
      "campaign_id",
      "customer_id",
      "metrics_cost_micros"
    ]
  },
  {
    "query": "Among campaigns targeting the keyword \u201cmorning kick\u201d which had the highest ROAS in the past 7 days?",
    "sql": "SELECT gcd.campaign_name, \n       (SUM(crm.revenue) - SUM(crm.spend)) AS ROAS\nFROM projectx-pipeline.dataset.google_ads_campaign_crm_performancepostfix crm \nJOIN projectx-pipeline.dataset.google_ads_campaign_detailspostfix gcd ON crm.campaign_id = gcd.campaign_id\nWHERE crm.campaign_id IN(\n  SELECT campaign_id\n  FROM projectx-pipeline.dataset.google_ads_keyword_performancepostfix   WHERE customer_id = 3424742100\n  AND ad_group_criterion_keyword_text = 'morning kick'\n  AND segments_date BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY) AND DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)\n  GROUP BY campaign_id\n  )\nAND crm.segments_date BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY) AND DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)\nGROUP BY gcd.campaign_name\nORDER BY ROAS DESC\nLIMIT 1",
    "tables": [
      "campaign_crm_performance",
      "keyword_performance",
      "campaign_details"
    ],
    "columns": [
      "revenue",
      "spend",
      "campaign_id",
      "ad_group_criterion_keyword_text",
      "customer_id",
      "ROAS",
      "segments_date",
      "campaign_name"
    ]
  },
  {
    "query": "Identify campaigns with CAC greater than $50 and more than 100 conversions in the last 30 days.",
    "sql": "SELECT gcd.campaign_name, SAFE_DIVIDE(SUM(crm.spend), SUM(crm.new_customers)) AS CAC, SUM(crm.new_customers) AS total_conversions\nFROM projectx-pipeline.dataset.google_ads_campaign_crm_performancepostfix crm\nJOIN projectx-pipeline.dataset.google_ads_campaign_detailspostfix gcd ON crm.campaign_id = gcd.campaign_id\nWHERE crm.customer_id = 3424742100\nAND crm.segments_date BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY) AND DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)\nGROUP BY gcd.campaign_id, gcd.campaign_name\nHAVING CAC > 50\nAND SUM(crm.new_customers) > 100",
    "tables": [
      "campaign_crm_performance",
      "campaign_details"
    ],
    "columns": [
      "spend",
      "CAC",
      "campaign_id",
      "customer_id",
      "segments_date",
      "campaign_name",
      "new_customers"
    ]
  },
  {
    "query": "Breakdown my ROAS for the past 30 days by campaign type.",
    "sql": "SELECT gcd.campaign_advertising_channel_type AS campaign_type, (SUM(crm.revenue) - SUM(crm.spend)) AS ROAS\nFROM projectx-pipeline.dataset.google_ads_campaign_crm_performancepostfix crm\nJOIN projectx-pipeline.dataset.google_ads_campaign_detailspostfix gcd ON crm.campaign_id = gcd.campaign_id\nWHERE crm.customer_id = 3424742100\nAND crm.segments_date BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY) AND DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)\nGROUP BY gcd.campaign_advertising_channel_type\nORDER BY ROAS DESC",
    "tables": [
      "campaign_crm_performance",
      "campaign_details"
    ],
    "columns": [
      "revenue",
      "spend",
      "campaign_advertising_channel_type",
      "campaign_id",
      "customer_id",
      "ROAS",
      "segments_date"
    ]
  },
  {
    "query": "How many New Customers did we acquire through each campaign yesterday?",
    "sql": "SELECT gcd.campaign_name, SUM(crm.new_customers) AS new_customers\nFROM projectx-pipeline.dataset.google_ads_campaign_crm_performancepostfix crm\nJOIN projectx-pipeline.dataset.google_ads_campaign_detailspostfix gcd ON crm.campaign_id = gcd.campaign_id\nWHERE crm.customer_id = 3424742100 \nAND crm.segments_date = DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)\nGROUP BY gcd.campaign_name\nORDER BY new_customers DESC",
    "tables": [
      "campaign_crm_performance",
      "campaign_details"
    ],
    "columns": [
      "campaign_id",
      "customer_id",
      "segments_date",
      "campaign_name",
      "new_customers"
    ]
  },
  {
    "query": "how many landing pages are running in this account?",
    "sql": "SELECT COUNT(DISTINCT glp.landing_page_view_unexpanded_final_url) \nFROM projectx-pipeline.dataset.google_ads_landing_page_performancepostfix glp\nWHERE glp.customer_id = 3424742100",
    "tables": [
      "landing_page_performance"
    ],
    "columns": [
      "landing_page_view_unexpanded_final_url",
      "customer_id"
    ]
  }
]